{
    "swagger": "2.0",
    "info": {
        "description": "This is national education data dictionary backend-api server. Updated@ 2022-09-15T09:29:03+10:00",
        "title": "National Education Data Dictionary API",
        "contact": {
            "name": "API Support"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "127.0.0.1:1323",
    "paths": {
        "/api/admin/email": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "unique user names, separator is ',' ",
                        "name": "unames",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "subject for email",
                        "name": "subject",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "body for email",
                        "name": "body",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - list successfully"
                    },
                    "401": {
                        "description": "Fail - unauthorized error"
                    },
                    "403": {
                        "description": "Fail - forbidden error"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/admin/user/action-list/{action}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "list user's action record",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user registered unique name",
                        "name": "uname",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "which action type [submit, approve, subscribe] record want to list",
                        "name": "action",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - list successfully"
                    },
                    "401": {
                        "description": "Fail - unauthorized error"
                    },
                    "403": {
                        "description": "Fail - forbidden error"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/admin/user/list/{fields}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "list users' info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user filter with uname wildcard(*)",
                        "name": "uname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "user filter with name wildcard(*)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "user filter with active status",
                        "name": "active",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "which user's fields (sep by ',') want to list. if empty, return all fields",
                        "name": "fields",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - list successfully"
                    },
                    "401": {
                        "description": "Fail - unauthorized error"
                    },
                    "403": {
                        "description": "Fail - forbidden error"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/admin/user/onlines": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "get all online users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user filter with uname wildcard(*)",
                        "name": "uname",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - list successfully"
                    },
                    "401": {
                        "description": "Fail - unauthorized error"
                    },
                    "403": {
                        "description": "Fail - forbidden error"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/admin/user/update/{fields}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "update user's info by fields \u0026 its values",
                "parameters": [
                    {
                        "type": "string",
                        "description": "unique user name want to be updated",
                        "name": "uname",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "which user struct fields (sep by ',') want to be updated. (fields must be identical to struct fields)",
                        "name": "fields",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - list successfully"
                    },
                    "400": {
                        "description": "Fail - bad request error"
                    },
                    "401": {
                        "description": "Fail - unauthorized error"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/dictionary/auth/approve": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "approve one dictionary candidate item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "entity/collection 'Entity' name for approval",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "item type, can only be [entity collection]",
                        "name": "kind",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - approve successfully"
                    },
                    "400": {
                        "description": "Fail - invalid parameters or request body"
                    },
                    "404": {
                        "description": "Fail - couldn't find item to approve"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/dictionary/auth/check/{action}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "check recorded action item existing status from [submit, approve, subscribe]",
                "parameters": [
                    {
                        "type": "string",
                        "description": "which action what to list its item record",
                        "name": "action",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "entity/collection 'Entity' name for checking existing status",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - get existing status successfully"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/dictionary/auth/clear/{kind}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "delete all entities or collections (dangerous)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "item type, can only be [entity collection]",
                        "name": "kind",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "which db collection? [existing, text, html]",
                        "name": "dbcol",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - cleared successfully"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/dictionary/auth/list/{action}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "list recorded action items from [submit, approve, subscribe]",
                "parameters": [
                    {
                        "type": "string",
                        "description": "which action what to list its item record",
                        "name": "action",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - get list successfully"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/dictionary/auth/one": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "delete one entity or collection by its 'Entity' name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Entity name for deleting",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "from which db collection? [existing, text, html]",
                        "name": "dbcol",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - deleted successfully"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/dictionary/auth/subscribe": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "toggle subscribe one dictionary item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "entity/collection 'Entity' name for approval",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "item type, can only be [entity collection]",
                        "name": "kind",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - subscribe/unsubscribe successfully. true: subscribed now; false: unsubscribed now"
                    },
                    "400": {
                        "description": "Fail - invalid parameters or request body"
                    },
                    "404": {
                        "description": "Fail - couldn't find item to subscribe"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/dictionary/auth/upsert": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "insert or update one entity or collection data by json payload",
                "parameters": [
                    {
                        "format": "binary",
                        "description": "entity or collection json data for uploading",
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - insert or update successfully"
                    },
                    "400": {
                        "description": "Fail - invalid parameters or request body"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/dictionary/pub/colentities": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "get related entities' name of a collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "collection name",
                        "name": "colname",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - got collection content successfully"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/dictionary/pub/entclasses": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "get class info (derived path \u0026 children) of an entity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "entity name",
                        "name": "entname",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - got entity class info successfully"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/dictionary/pub/exists": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "check whether one item exists according to its 'Entity' name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Entity name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "from which db collection? [existing, text, html]",
                        "name": "dbcol",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - got successfully"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/dictionary/pub/items/{kind}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "get all entities' or collections' full content",
                "parameters": [
                    {
                        "type": "string",
                        "description": "item type, can only be [entity collection]",
                        "name": "kind",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "entity/collection 'Entity' name for query. if empty, get all",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from which db collection? [existing, text, html]",
                        "name": "dbcol",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - get successfully"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/dictionary/pub/kind": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "check item's kind ('entity' or 'collection') by its name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Entity name for checking kind",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "from which db collection? [existing, text, html]",
                        "name": "dbcol",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - got kind ('entity' or 'collection') successfully"
                    },
                    "404": {
                        "description": "Fail - neither 'entity' nor 'collection'"
                    }
                }
            }
        },
        "/api/dictionary/pub/list/{kind}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "list all entities' or collections' name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "item type, can only be [entity collection]",
                        "name": "kind",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "entity/collection 'Entity' name for query. if empty, get all",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from which db collection? [existing, text, html]",
                        "name": "dbcol",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - list successfully"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/dictionary/pub/one": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "get one entity or collection by its 'Entity' name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Entity name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "regex applies?",
                        "name": "fuzzy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "from which db collection? [existing, text, html]",
                        "name": "dbcol",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - got successfully"
                    },
                    "400": {
                        "description": "Fail - invalid parameters"
                    },
                    "404": {
                        "description": "Fail - not found"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/dictionary/pub/search": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "get list of entity's \u0026 collection's name by searching. If not given, return all",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search content from whole dictionary",
                        "name": "aim",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "case insensitive ?",
                        "name": "ignorecase",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - got list of found item's name successfully"
                    },
                    "400": {
                        "description": "Fail - invalid parameters"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/system/tag": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "get this api service project github version tag",
                "responses": {
                    "200": {
                        "description": "OK - get its tag"
                    }
                }
            }
        },
        "/api/system/ver": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "get this api service version",
                "responses": {
                    "200": {
                        "description": "OK - get its version"
                    }
                }
            }
        },
        "/api/user/auth/sign-out": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "sign out action.",
                "responses": {
                    "200": {
                        "description": "OK - sign-out successfully"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/user/auth/uname": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "get uname",
                "responses": {
                    "200": {
                        "description": "OK - got uname"
                    }
                }
            }
        },
        "/api/user/pub/sign-in": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "sign in action. if ok, got token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user name or email",
                        "name": "uname",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "password",
                        "description": "password",
                        "name": "pwd",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - sign-in successfully"
                    },
                    "400": {
                        "description": "Fail - incorrect password"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/user/pub/sign-up": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "sign up action, send user's basic info for registry",
                "parameters": [
                    {
                        "type": "string",
                        "description": "unique user name",
                        "name": "uname",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "email",
                        "description": "user's email",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user's password",
                        "name": "pwd",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - then waiting for verification code"
                    },
                    "400": {
                        "description": "Fail - invalid registry fields"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        },
        "/api/user/pub/verify-email": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "sign up action, step 2. send back email verification code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "unique user name",
                        "name": "uname",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "verification code (in user's email)",
                        "name": "code",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - sign-up successfully"
                    },
                    "400": {
                        "description": "Fail - incorrect verification code"
                    },
                    "500": {
                        "description": "Fail - internal error"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "authorization",
            "in": "header"
        }
    }
}