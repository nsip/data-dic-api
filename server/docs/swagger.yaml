host: 127.0.0.1:1323
info:
  contact:
    name: API Support
  description: This is national education data dictionary backend-api server. Updated@
    2022-09-15T09:29:03+10:00
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: National Education Data Dictionary API
  version: "1.0"
paths:
  /api/dictionary/auth/clear/{itemType}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: item type, only can be 'entity' or 'collection'
        in: path
        name: itemType
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - cleared successfully
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: delete all entities or collections (dangerous)
      tags:
      - Dictionary
  /api/dictionary/auth/one:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Entity name for deleting
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - deleted successfully
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: delete one entity or collection by its 'Entity' name
      tags:
      - Dictionary
  /api/dictionary/auth/upsert:
    post:
      consumes:
      - application/json
      parameters:
      - description: entity or collection json data for uploading
        format: binary
        in: body
        name: entity
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - insert or update successfully
        "400":
          description: Fail - invalid parameters or request body
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: insert or update one entity or collection data by json payload
      tags:
      - Dictionary
  /api/dictionary/pub/colentities:
    get:
      consumes:
      - application/json
      parameters:
      - description: collection name
        in: query
        name: colname
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - got collection content successfully
        "500":
          description: Fail - internal error
      summary: get related entities' name of a collection
      tags:
      - Dictionary
  /api/dictionary/pub/entclasses:
    get:
      consumes:
      - application/json
      parameters:
      - description: entity name
        in: query
        name: entname
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - got entity class info successfully
        "500":
          description: Fail - internal error
      summary: get class info (derived path & children) of an entity
      tags:
      - Dictionary
  /api/dictionary/pub/items/{itemType}:
    get:
      consumes:
      - application/json
      parameters:
      - description: item type, only can be 'entity' or 'collection'
        in: path
        name: itemType
        required: true
        type: string
      - description: entity/collection 'Entity' name for query. if empty, get all
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - get successfully
        "500":
          description: Fail - internal error
      summary: get all entities' or collections' full content
      tags:
      - Dictionary
  /api/dictionary/pub/kind:
    get:
      consumes:
      - application/json
      parameters:
      - description: Entity name for checking kind
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - got kind ('entity' or 'collection') successfully
        "404":
          description: Fail - neither 'entity' nor 'collection'
        "500":
          description: Fail - internal error
      summary: check item's kind ('entity' or 'collection') by its name
      tags:
      - Dictionary
  /api/dictionary/pub/list/{itemType}:
    get:
      consumes:
      - application/json
      parameters:
      - description: item type, only can be 'entity' or 'collection'
        in: path
        name: itemType
        required: true
        type: string
      - description: entity/collection 'Entity' name for query. if empty, get all
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - list successfully
        "500":
          description: Fail - internal error
      summary: list all entities' or collections' name
      tags:
      - Dictionary
  /api/dictionary/pub/one:
    get:
      consumes:
      - application/json
      parameters:
      - description: Entity name
        in: query
        name: name
        required: true
        type: string
      - description: regex applies?
        in: query
        name: fuzzy
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK - got successfully
        "400":
          description: Fail - invalid parameters
        "404":
          description: Fail - not found
        "500":
          description: Fail - internal error
      summary: get one entity or collection by its 'Entity' name
      tags:
      - Dictionary
  /api/dictionary/pub/search:
    get:
      consumes:
      - application/json
      parameters:
      - description: search content from whole dictionary
        in: query
        name: aim
        type: string
      - description: case insensitive ?
        in: query
        name: ignorecase
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK - got list of found item's name successfully
        "400":
          description: Fail - invalid parameters
        "500":
          description: Fail - internal error
      summary: get list of entity's & collection's name by searching. If not given,
        return all
      tags:
      - Dictionary
  /api/sign-out/:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK - sign-out successfully
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: sign out action.
      tags:
      - Sign
  /api/sign/in:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: user name or email
        in: formData
        name: uname
        required: true
        type: string
      - description: password
        format: password
        in: formData
        name: pwd
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - sign-in successfully
        "400":
          description: Fail - incorrect password
        "500":
          description: Fail - internal error
      summary: sign in action. if ok, got token
      tags:
      - Sign
  /api/sign/new:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: unique user name
        in: formData
        name: uname
        required: true
        type: string
      - description: user's email
        format: email
        in: formData
        name: email
        required: true
        type: string
      - description: user's password
        in: formData
        name: pwd
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - then waiting for verification code
        "400":
          description: Fail - invalid registry fields
        "500":
          description: Fail - internal error
      summary: sign up action, send user's basic info for registry
      tags:
      - Sign
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: authorization
    type: apiKey
swagger: "2.0"
